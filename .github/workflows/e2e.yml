name: E2E Tests

on:
  push:
    branches:
      - main
    paths:
      - "web/**"
      - "backend/**"
      - "e2e/**"
      - ".github/workflows/e2e.yml"
  pull_request:
    paths:
      - "web/**"
      - "backend/**"
      - "e2e/**"
      - ".github/workflows/e2e.yml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      # Setup Go for backend
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.6"
          check-latest: true
          cache-dependency-path: backend/go.sum

      # Setup Node.js and pnpm
      - uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: |
            web/pnpm-lock.yaml
            e2e/pnpm-lock.yaml

      # Install backend dependencies
      - name: Install backend dependencies
        working-directory: backend
        run: go mod download

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: web
        run: pnpm install

      # Install E2E test dependencies
      - name: Install E2E test dependencies
        working-directory: e2e
        run: pnpm install

      # Install Playwright browsers
      - name: Install Playwright browsers
        working-directory: e2e
        run: npx playwright install chromium --with-deps

      # Start backend in background
      - name: Start backend server
        working-directory: backend
        env:
          DATABASE_URL: postgres://admin:admin@localhost:5432/app?sslmode=disable
          DB_URL: postgres://admin:admin@localhost:5432/app?sslmode=disable
          PORT: 8080
          CORS_ALLOWED_ORIGINS: http://localhost:5173,http://localhost:4173
          # Disable authentication for E2E testing
          DISABLE_AUTH: true
          # Mock Google Gemini API for testing
          GEMINI_API_KEY: test-api-key
          ENABLE_SUMMARIZE: false
        run: |
          go run . &
          echo $! > backend.pid

      # Wait for backend to be ready
      - name: Wait for backend
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done' || exit 1

      # Seed test data
      - name: Seed test data
        run: |
          PGPASSWORD=admin psql -h localhost -U admin -d app -f backend/scripts/seed-test-data.sql

      # Run E2E tests
      - name: Run E2E tests
        working-directory: e2e
        env:
          VITE_API_URL: http://localhost:8080
        run: pnpm test

      # Upload test results
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30

      # Upload test screenshots and videos on failure
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-results
          path: e2e/test-results/
          retention-days: 30

      # Cleanup
      - name: Stop servers
        if: always()
        run: |
          if [ -f backend/backend.pid ]; then
            kill $(cat backend/backend.pid) || true
          fi
