directive @goModel(
	model: String
	models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
	forceResolver: Boolean
	name: String
	omittable: Boolean
	type: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

scalar Time

enum FeedFetchStatus {
  Success
  Failure
}

enum PostStatus {
  Registered
  Fetched
  Summarized
}

enum PostFetchStatus {
  Success
  Failure
}

type Feed {
  feedId: ID!
  url: String!
  title: String!
  description: String
  registeredAt: Time!
  lastFetchedAt: Time
}

input FeedPostsInput {
  limit: Int! = 20
  offset: Int! = 0
  order: PostsInputOrder! = PostedAtDesc
}

type FeedFetch {
  feedFetchId: ID!
  feedId: ID!
  status: FeedFetchStatus!
  message: String
  fetchedAt: Time!
}

type Post {
  postId: ID!
  feedId: ID!
  url: String!
  title: String!
  description: String
  author: String
  status: PostStatus!
  postedAt: Time
  lastFetchedAt: Time
  summary: PostSummary @goField(forceResolver: true)
  feed: Feed! @goField(forceResolver: true)
}

type PostFetch {
  postFetchId: ID!
  postId: ID!
  status: PostFetchStatus!
  message: String
  fetchedAt: Time!
}

type PostSummary {
  postSummaryId: ID!
  postId: ID!
  summarizeMethod: String!
  summary: String!
  summarizedAt: Time!
}
