package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"

	"github.com/abekoh/simple-rss/backend/gql"
)

// Posts is the resolver for the posts field.
func (r *feedResolver) Posts(ctx context.Context, obj *gql.Feed, input gql.FeedPostsInput) (*gql.PostsPayload, error) {
	panic(fmt.Errorf("not implemented: Posts - posts"))
}

// Summary is the resolver for the summary field.
func (r *postResolver) Summary(ctx context.Context, obj *gql.Post) (*gql.PostSummary, error) {
	panic(fmt.Errorf("not implemented: Summary - summary"))
}

// Feed is the resolver for the feed field.
func (r *postResolver) Feed(ctx context.Context, obj *gql.Post) (*gql.Feed, error) {
	panic(fmt.Errorf("not implemented: Feed - feed"))
}

// Feed returns gql.FeedResolver implementation.
func (r *Resolver) Feed() gql.FeedResolver { return &feedResolver{r} }

// Post returns gql.PostResolver implementation.
func (r *Resolver) Post() gql.PostResolver { return &postResolver{r} }

type feedResolver struct{ *Resolver }
type postResolver struct{ *Resolver }
